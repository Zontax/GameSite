@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@using GameSite.Models
@using GameSite.Data
@using Humanizer
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model Comment;
@{
    ViewData["Title"] = ViewBag.Post.Title;
    var user = await UserManager.GetUserAsync(User);
}

<div>
    <div class="show-post-title"><center><h1>@ViewBag.Post.Title</h1></center></div>
    <div class="show-post">
        
        <p class="author-date">@ViewBag.Post.Date.ToString("dd MMMM, yyyy") @Resources.Resource.Author: <b>@ViewBag.Post.Author</b></p>

        <div>
           @Html.Raw(ViewBag.Post.Content)
        </div>

        @if (ViewBag.Post.TypeId == PostType.Огляд && ViewBag.Post.ReviewPlus != null && ViewBag.Post.ReviewMinus != null && ViewBag.Post.ReviewRating != null)
        {
            <div style="align-items: center;">
            <div class="review-info">
                <div class="review-plus">
                    <div class="review-title-plus"><center><h3>@Resources.Resource.ReviewPlus</h3></center></div>
                    <ul class="ul-null">
                        @foreach (var item in ViewBag.Post.ReviewPlus.Split(','))
                        {
                            <li class="icon-dot-a">@item.Trim()</li>
                        }
                    </ul>
                </div>

                <div class="review-info__rating">
                    <div class="d-flex justify-content-center align-items-center">
                        <h1>@ViewBag.Post.ReviewRating</h1>
                    </div>
                    <div class="d-flex justify-content-center align-items-center">
                        <h2>@SiteFunctions.GetReviewText(ViewBag.Post.ReviewRating)</h2>
                    </div>
                </div>

                <div class="review-minus">
                    <div class="review-title-minus"><center><h3>@Resources.Resource.ReviewMinus</h3></center></div>
                    <ul class="ul-null">
                        @foreach (var item in ViewBag.Post.ReviewMinus.Split(','))
                        {
                            <li class="icon-dot-b">@item.Trim()</li>
                        }
                    </ul>
                </div>
            </div>

            </div>
        }
        
        <p>
            <button class="btn btn-outline-primary" id="likeButton" data-userid="@user?.Id" data-postid="@ViewBag.Post.Id" title="@Resources.Resource.Like">
                👍@ViewBag.Post.LikesCount</button>
            <button class="btn btn-outline-primary" id="dislikeButton" data-userid="@user?.Id" data-postid="@ViewBag.Post.Id" title="@Resources.Resource.Dislike">
                👎@ViewBag.Post.DislikesCount</button>
            @if (SignInManager.IsSignedIn(User))
            {
                <button class="btn btn-outline-primary" id="favoriteButton" data-postid="@ViewBag.Post.Id">
                    @Resources.Resource.Bookmarked
                </button>
            }
        </p>
        <p>
            <i>@Resources.Resource.Tags:
                @{
                    var tags = ViewBag.Post.Tags.Split(",");
                    for (var i = 0; i < tags.Length; i++)
                    {
                        <a class="post-tags" asp-action="Tag" asp-route-tag="@tags[i].Trim()">@tags[i].Trim().Replace('_', ' ')</a>
                        @if (i < tags.Length - 1)
                        {
                            @:<b>,</b>
                        }
                    }
                }
            </i>
        </p>
    </div>

    <h5 id="comments">@Resources.Resource.Comments @(((ICollection<Comment>?)ViewBag.Post.Comments)?.Count()) </h5>
        
    @if (!SignInManager.IsSignedIn(User))
    {
        <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login">
            @Resources.Resource.SignInToPostComments
        </a> 
    }
    else
    {
        <form asp-action="Show" method="post" class="comment-form">

            <input type="hidden" value="@null" name="ReplyId" />
            <div class="form-group">
                <span asp-validation-for="Author" class="text-danger"></span>
                <input asp-for="PostId" class="form-control" value="@ViewBag.Post.Id" readonly hidden>
            </div>
            <div class="form-group">
                <span asp-validation-for="Author" class="text-danger"></span>
                <input asp-for="Author" class="form-control" value="@user?.Name" readonly hidden>
            </div>
            <div class="form-group">
                <span asp-validation-for="Text" class="text-danger"></span>
                <textarea asp-for="Text" class="form-control"></textarea>
            </div>
            <button type="submit" class="btn btn-primary">@Resources.Resource.AddComment</button>

        </form>
    }

    @foreach (Comment comment in ((ICollection<Comment>)ViewBag.Post.Comments).OrderByDescending(c => c.Date))
    {
        @if (comment.ReplyCommentId == null)
        {
            <div class="post-comment">
                <p class="date-time" title="@comment.Date.ToString("yyyy-MM-dd HH:mm")">
                    @(DateTime.UtcNow.Add(-((TimeSpan)(DateTime.UtcNow - comment.Date))).Humanize())
                    @if (comment.Edited) { <b> (@Resources.Resource.Edited)</b> }
                </p>
                <p><b>@comment.Author: </b>@comment.Text</p>

                @if (User.IsInRole("Admin"))
                {
                    <a class="btn btn-danger" asp-controller="Admin" asp-action="DeleteComment"
                       asp-route-commentId="@comment.Id"
                       asp-route-postId="@ViewBag.Post.Id"
                       onclick="return confirmDelete('@("Видалити коментар?")');">
                        @Resources.Resource.Delete
                    </a>
                }
            </div>

            @* @if (SignInManager.IsSignedIn(User))
            {
                <form asp-action="Show" method="post" class="comment-form" id="commentReplyForm">

                    <input type="hidden" value="@ViewBag.Post.Id" name="PostId" />
                    <input type="hidden" value="@comment.Id" name="ReplyId" />
                    <div class="form-group">
                        <span asp-validation-for="Author" class="text-danger"></span>
                        <input asp-for="Author" class="form-control" value="@user?.Name" readonly hidden>
                    </div>
                    <div class="form-group">
                        <span asp-validation-for="Text" class="text-danger"></span>
                        <textarea asp-for="Text" class="form-control"></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">@Resources.Resource.Answer</button>

                </form>
            } *@

            <!-- Вкладений цикл для коментарів-відповідей -->
            @foreach (Comment reply in ((ICollection<Comment>)ViewBag.Post.Comments)
                .Where(c => c.ReplyCommentId == comment.Id)
                .OrderByDescending(c => c.Date))
            {
                <div class="reply-comment">
                    <p title="(reply to @comment.Author)"><b>@reply.Author: </b> @reply.Text</p>
                    <p class="date-time" title="@reply.Date.ToString("yyyy-MM-dd HH:mm")">
                        @(DateTime.UtcNow.Add(-((TimeSpan)(DateTime.UtcNow - reply.Date))).Humanize())
                        @if (reply.Edited) { <b> (@Resources.Resource.Edited)</b> }
                    </p>
                </div>
            }
        }
    }
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const fragment = window.location.hash.substr(1); // Отримуємо фрагмент з URL
            const element = document.getElementById(fragment); // Знаходимо елемент за ідентифікатором

            if (element) {
                element.scrollIntoView({ behavior: "smooth" }); // Прокручуємо до елементу з плавним ефектом
            }
        });

        $(document).ready(function () {

            function performAction(button, postId, userId, action, likeElement, dislikeElement) {
                if (userId !== "") {
                    $.ajax({
                        url: '/Ajax/LikeOrDislike',
                        type: 'POST',
                        data: { postId: postId, userId: userId, action: action },

                        success: function (response) {
                            likeElement.text('👍' + response.likes);
                            dislikeElement.text('👎' + response.dislikes);
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                }
            }

            $('#likeButton').click(function () {
                var button = $(this);
                var postId = button.data('postid');
                var userId = button.data('userid');
                var likesCountElement = button;
                performAction(button, postId, userId, 'like', likesCountElement, $('#dislikeButton'));
            });

            $('#dislikeButton').click(function () {
                var button = $(this);
                var postId = button.data('postid');
                var userId = button.data('userid');
                var dislikesCountElement = button;
                performAction(button, postId, userId, 'dislike', $('#likeButton'), dislikesCountElement);
            });


            $("#favoriteButton[data-postid]").each(function() {
                var postId = $(this).data("postid");
                checkIfSaved(postId);
            });

            $("#favoriteButton").click(function () {
                var button = $(this);
                var postId = $(this).data('postid');
                var userId = $(this).data('userid');

                if (userId != "") {
                    $.ajax({
                        url: '/Ajax/AddToSaved',
                        type: 'POST',
                        data: { postId: postId, userId: userId },

                        success: function (response) {  
                            button.text(response.message);
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                }
    });
    
    function checkIfSaved(postId) {
        $.ajax({
            url: "/Ajax/CheckSaved",
            type: "GET",
            data: { postId: postId },
            success: function (response) {
                $('#favoriteButton[data-postid]').text(response.message);
            },
            error: function (xhr, status, error) {
                console.error(error);
            }
        });
    }
    });
    </script>
}