@using Microsoft.AspNetCore.Identity
@using GameSite.Data
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

<ul class="navbar-nav">

    <li class="nav-item" style="margin-right: 12px;">
        <form class="form-inline" onsubmit="return submitForm()" asp-controller="Home" asp-action="Search"
            asp-route-search="searchValue">
            <div class="input-group">
                @if (ViewBag.Search == null)
                {
                    <input type="text" class="form-control" name="search" placeholder="@Resources.Resource.Search"
                        aria-label="Search" aria-describedby="button-search">
                }
                else
                {
                    <input type="text" class="form-control" name="search" value="@ViewBag.Search"
                        placeholder="@Resources.Resource.Search" aria-label="Search" aria-describedby="button-search">
                }
                <div class="input-group-append">
                    <button type="submit" id="button-search" style="display: none;"></button>
                </div>
            </div>
        </form>
    </li>

    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="btn btn-warning" asp-controller="Admin" asp-action="Users">@Resources.Resource.AdminPanel</a>
            </li>
        }

        var user = await UserManager.GetUserAsync(User);

        <li class="nav-item" style="margin-left: 10px; margin-right: 10px;">
            <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Manage/Index" title="@user?.UserName">
                @{
                    var userName = user?.Name ?? string.Empty;
                    var displayedName = userName.Length > 15 ? userName.Substring(0, 15) + "..." : userName;
                }
                @displayedName
            </a>
        </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button class="btn btn-danger" type="submit" class="nav-link btn btn-link text-dark">
                    @Resources.Resource.SignOut</button>
            </form>
        </li>
    }
    else
    {
        <li>
            <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Register">@Resources.Resource.Register</a>
        </li>
        <li style="margin-left: 10px;">
            <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login">@Resources.Resource.LogIn</a>
        </li>
    }

    <div class="dropdown" style="margin-left: 10px;">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown"
            aria-expanded="false">
            @Resources.Resource.Lang
        </button>
        <ul class="dropdown-menu" aria-labelledby="languageDropdown">
            <li>
                <a class="dropdown-item" asp-controller="Language" asp-action="SetLanguage" asp-route-lang="uk"
                    asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">Укр</a>
            </li>
            <li>
                <a class="dropdown-item" asp-controller="Language" asp-action="SetLanguage" asp-route-lang="en"
                    asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">Eng</a>
            </li>
        </ul>
    </div>
</ul>

<script>
    function submitForm() {
        var searchValue = document.querySelector('input[name="search"]').value;
        var form = document.querySelector('form');
        form.action = "/home/search?search=" + encodeURIComponent(searchValue);
        return true;
    }
</script>